<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace melkov\models\base;

use Yii;

/**
 * This is the base-model class for table "geo_city".
 *
 * @property integer $id
 * @property integer $geo_id
 * @property string $name
 * @property boolean $is_capital
 * @property integer $weight
 * @property integer $region_id
 * @property string $lat
 * @property string $lon
 *
 * @property \common\models\GeoRegion $region
 * @property \common\models\GeoIp[] $geoIps
 * @property string $aliasModel
 */
abstract class GeoCity extends \melkov\db\ActiveRecord 
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'geo_city';
    }


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['geo_id', 'name', 'region_id'], 'required'],
            [['geo_id', 'weight', 'region_id'], 'integer'],
            [['is_capital'], 'boolean'],
            [['name'], 'string', 'max' => 100],
            [['lat', 'lon'], 'string', 'max' => 20],
            [['region_id'], 'exist', 'skipOnError' => true, 'targetClass' => GeoRegion::className(), 'targetAttribute' => ['region_id' => 'id']],
            [['name', 'lat', 'lon'], 'trim']
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('label', 'ID'),
            'geo_id' => Yii::t('label', 'Geo ID'),
            'name' => Yii::t('label', 'Name'),
            'is_capital' => Yii::t('label', 'Is Capital'),
            'weight' => Yii::t('label', 'Weight'),
            'region_id' => Yii::t('label', 'Region ID'),
            'lat' => Yii::t('label', 'Lat'),
            'lon' => Yii::t('label', 'Lon'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getRegion()
    {
        return $this->hasOne(\common\models\GeoRegion::className(), ['id' => 'region_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getGeoIps()
    {
        return $this->hasMany(\common\models\GeoIp::className(), ['city_id' => 'id']);
    }


    
    /**
     * @inheritdoc
     * @return \common\models\query\GeoCityQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \common\models\query\GeoCityQuery(get_called_class());
    }


}
